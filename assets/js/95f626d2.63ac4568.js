"use strict";(self.webpackChunkcodebase_doctor_docs=self.webpackChunkcodebase_doctor_docs||[]).push([[239],{8262:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var a=t(5893),s=t(1151);const o={},r="Log4j2",i={id:"install/jvm/log4j2",title:"Log4j2",description:"The integration for Log4j2 supports automatically associating logs with a user's session and sending log messages to Catalyst.",source:"@site/docs/install/jvm/log4j2.md",sourceDirName:"install/jvm",slug:"/install/jvm/log4j2",permalink:"/docs/install/jvm/log4j2",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Javalin",permalink:"/docs/install/jvm/javalin"},next:{title:"Guides",permalink:"/docs/category/guides"}},l={},d=[{value:"1. Add the dependencies",id:"1-add-the-dependencies",level:2},{value:"2. Initialize Catalyst",id:"2-initialize-catalyst",level:2},{value:"3. Add CatalystAppender to your Log4j2 configuration",id:"3-add-catalystappender-to-your-log4j2-configuration",level:2},{value:"4. Wrap your sessions",id:"4-wrap-your-sessions",level:2},{value:"Finished",id:"finished",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"log4j2",children:"Log4j2"}),"\n",(0,a.jsxs)(n.p,{children:["The integration for ",(0,a.jsx)(n.a,{href:"https://logging.apache.org/log4j/2.x/",children:"Log4j2"})," supports automatically associating logs with a user's session and sending log messages to Catalyst."]}),"\n",(0,a.jsxs)(n.p,{children:["Before you start, you'll need to sign up for Catalyst and have your keys ready, as detailed ",(0,a.jsx)(n.a,{href:"/docs/signup",children:"here"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"1-add-the-dependencies",children:"1. Add the dependencies"}),"\n",(0,a.jsx)(n.p,{children:"Add the dependencies required for Catalyst."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",metastring:'title="Maven"',children:"<dependency>\n    <groupId>com.catalystmonitor.client</groupId>\n    <artifactId>catalyst-core</artifactId>\n    <version>0.0.1</version>\n</dependency>\n<dependency>\n    <groupId>com.catalystmonitor.client</groupId>\n    <artifactId>catalyst-javalin</artifactId>\n    <version>0.0.1</version>\n</dependency>\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",metastring:'title="Gradle (Kotlin)"',children:'implementation("com.catalystmonitor.client:catalyst-core:0.0.1")\nimplementation("com.catalystmonitor.client:catalyst-javalin:0.0.1")\n'})}),"\n",(0,a.jsx)(n.h2,{id:"2-initialize-catalyst",children:"2. Initialize Catalyst"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'CatalystServer\n    .createInstance(\n        CatalystServer.Options(\n            privateKey = "KEY-HERE", // Private key from dashboard\n            version = "abc", // Any string depicting version, like Git commit hash\n            systemName = "foo-backend", // Any name, separating this system from others.\n            disabled = false, // Optionally, disable for local development.\n        )\n    )\n    .start()\n'})}),"\n",(0,a.jsx)(n.h2,{id:"3-add-catalystappender-to-your-log4j2-configuration",children:"3. Add CatalystAppender to your Log4j2 configuration"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",metastring:'title="resources/log4j2.xml"',children:'<Configuration status="WARN" monitorInterval="30" packages="com.catalystmonitor.client.log4j2">\n    <Properties>\n        <Property\n                name="COLOR_LOG_PATTERN">%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight{${LOG_LEVEL_PATTERN:-%5p}}{FATAL=red, ERROR=red, WARN=yellow, INFO=green, DEBUG=blue, TRACE=blue} %style{%pid}{magenta} [%t] %style{%C{1.}}{cyan}: %m%n%ex\n        </Property>\n    </Properties>\n\n    <Appenders>\n        <Console name="Console" target="SYSTEM_OUT" follow="true">\n            <PatternLayout pattern="${COLOR_LOG_PATTERN}"/>\n        </Console>\n\n        \x3c!-- This appender automatically sends logs to Catalyst --\x3e\n        <CatalystAppender name="CatalystAppender"/>\n    </Appenders>\n\n    <Loggers>\n        <Root level="INFO">\n            <AppenderRef ref="Console"/>\n            <AppenderRef ref="CatalystAppender"/>\n        </Root>\n    </Loggers>\n</Configuration>\n'})}),"\n",(0,a.jsx)(n.h2,{id:"4-wrap-your-sessions",children:"4. Wrap your sessions"}),"\n",(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsxs)(n.p,{children:["Instead of manually wrapping your sessions, it's recommended to use a library for your framework like ",(0,a.jsx)(n.a,{href:"./javalin",children:"Javalin"}),"."]}),(0,a.jsxs)(n.p,{children:["If your framework isn't currently supported, please reach out either ",(0,a.jsx)(n.a,{href:"mailto:bill@privium.xyz",children:"through e-mail"})," or ",(0,a.jsx)(n.a,{href:"https://discord.gg/YQZy4SXzmX",children:"via Discord"})," and we'd be happy to consider implementing a client library for your framework of choice."]})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'val logger = LoggerFactory.getLogger("example")\n\nCatalystServer.Context.setLocal(\n    ServerRequestContext(\n        fetchId = UUID.randomUUID().toString(),\n        sessionId = sessionId,\n        pageViewId = ctx.header(CommonStrings.PAGE_VIEW_ID_HEADER),\n        parentFetchId = ctx.header(CommonStrings.PARENT_FETCH_ID_HEADER),\n    )\n)\n\nval e = RuntimeException()\nlogger\n    .atError()\n    // This exception and stack trace will be sent to Catalyst\n    .setCause(e)\n    // Both the message pattern and parameter values will be sent to Catalyst.\n    .log("This is a message with parameters: {}", 45)\n\nCatalystServer.Context.removeLocal()\n'})}),"\n",(0,a.jsx)(n.h2,{id:"finished",children:"Finished"})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>r});var a=t(7294);const s={},o=a.createContext(s);function r(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);