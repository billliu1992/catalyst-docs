"use strict";(self.webpackChunkcodebase_doctor_docs=self.webpackChunkcodebase_doctor_docs||[]).push([[903],{6247:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var o=n(5893),r=n(1151);const a={sidebar_position:3},s="Manually Instrumenting Node.JS HTTP Server",i={id:"guides/instrument-node-http",title:"Manually Instrumenting Node.JS HTTP Server",description:"Please check if we provide a package for your choice of HTTP server, before manually instrumenting!",source:"@site/docs/guides/instrument-node-http.md",sourceDirName:"guides",slug:"/guides/instrument-node-http",permalink:"/guides/instrument-node-http",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Manually Instrumenting Navigation on Web",permalink:"/guides/instrument-web-navigation"},next:{title:"Instrumenting for other languages and frameworks",permalink:"/guides/instrument-other"}},c={},d=[{value:"Creating a Context",id:"creating-a-context",level:2},{value:"Recording an HTTP Request",id:"recording-an-http-request",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"manually-instrumenting-nodejs-http-server",children:"Manually Instrumenting Node.JS HTTP Server"}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsx)(t.p,{children:"Please check if we provide a package for your choice of HTTP server, before manually instrumenting!"})}),"\n",(0,o.jsx)(t.p,{children:"Being able to breakdown your errors and logs by HTTP request can greatly speed up your triage and debugging processes."}),"\n",(0,o.jsxs)(t.p,{children:["An example of a working implementation can be found ",(0,o.jsx)(t.a,{href:"https://github.com/catalyst-monitor/catalyst-js/blob/main/packages/express/src/index.ts",children:"here"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"creating-a-context",children:"Creating a Context"}),"\n",(0,o.jsxs)(t.p,{children:["In order for Catalyst to associate logs and errors to the individual request, you'll need to create a context. You can do so by calling ",(0,o.jsx)(t.code,{children:"getCatalystWeb().recordPageView(...)"}),"."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:"import {\n  createCatalystContext,\n  ServerRequestContext,\n  SESSION_ID_HEADER,\n  PAGE_VIEW_ID_HEADER,\n  PARENT_FETCH_ID_HEADER,\n} from '@catalyst-monitor/core'\n\nconst context: ServerRequestContext = {\n    fetchId: crypto.randomUUID(),\n    sessionId: 'SESSION_ID_HERE', // Value of header from SESSION_ID_HEADER\n    pageViewId: 'PAGE_VIEW_ID', // Value of header from PAGE_VIEW_ID_HEADER\n    parentFetchId: 'PARENT_FETCH_ID', // Value of header from PARENT_FETCH_ID_HEADER\n}\n\ncreateCatalystContext(context, () => {\n    // Your endpoint code here.\n})\n"})}),"\n",(0,o.jsx)(t.p,{children:"Afterwards, you can obtain and pass this context object when calling Catalyst:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:"import { getCatalystNode, getCatalystContext } from '@catalyst-monitor/core'\n\nconst context = getCatalystContext()\nif (context != null) {\n    getCatalystNode().recordLog('error', e, {}, context)\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"recording-an-http-request",children:"Recording an HTTP Request"}),"\n",(0,o.jsxs)(t.p,{children:["To record an HTTP request, simply take the context you've created, and pass it into ",(0,o.jsx)(t.code,{children:"recordFetch"}),"."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:"import { getCatalystNode, getCatalystContext } from '@catalyst-monitor/core'\n\nconst context = getCatalystContext()\n\nif (context != null) {\n    getCatalystNode().recordFetch(\n         // The HTTP method, e.g. get, post, put\n        'get',\n\n        // The path pattern, unreplaced.\n        '/widgets/:widgetId',\n\n        // The path parameter values.\n        { widgetId: 'a' },\n\n        // The HTTP status code, as a number.\n        200,\n\n        {\n            seconds: 5, // Number of seconds this request took.\n            nanos: 0, // Number of nanoseconds after the second.\n        },\n        context)\n}\n"})}),"\n",(0,o.jsx)(t.p,{children:"Catalyst is not opinionated on the format of the path pattern. For best results, always pass in the path pattern and param separately. This will give you an aggregate view of logs and errors per path pattern, while still letting you drill down on individual visits."})]})}function u(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>s});var o=n(7294);const r={},a=o.createContext(r);function s(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);